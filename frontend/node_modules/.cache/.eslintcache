[{"/Users/user/Documents/GitHub/insta-clone1/frontend/src/index.js":"1","/Users/user/Documents/GitHub/insta-clone1/frontend/src/App.js":"2","/Users/user/Documents/GitHub/insta-clone1/frontend/src/reportWebVitals.js":"3","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/Navbar.js":"4","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/Profie.js":"5","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/Createpost.js":"6","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/Modal.js":"7","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/UserProfile.js":"8","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/MyFollowingPost.js":"9","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/SignIn.js":"10","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/Home.js":"11","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/SignUp.js":"12","/Users/user/Documents/GitHub/insta-clone1/frontend/src/context/LoginContext.js":"13","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/ProfilePic.js":"14","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/PostDetail.js":"15"},{"size":535,"mtime":1673528233164,"results":"16","hashOfConfig":"17"},{"size":1752,"mtime":1673528233159,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1673528233165,"results":"19","hashOfConfig":"17"},{"size":1222,"mtime":1673528233161,"results":"20","hashOfConfig":"17"},{"size":2527,"mtime":1673528233162,"results":"21","hashOfConfig":"17"},{"size":3311,"mtime":1673528233160,"results":"22","hashOfConfig":"17"},{"size":1347,"mtime":1673528233160,"results":"23","hashOfConfig":"17"},{"size":3706,"mtime":1673528233163,"results":"24","hashOfConfig":"17"},{"size":8554,"mtime":1673528233161,"results":"25","hashOfConfig":"17"},{"size":2421,"mtime":1673528233163,"results":"26","hashOfConfig":"17"},{"size":8495,"mtime":1673528233160,"results":"27","hashOfConfig":"17"},{"size":3427,"mtime":1673528233163,"results":"28","hashOfConfig":"17"},{"size":89,"mtime":1673528233164,"results":"29","hashOfConfig":"17"},{"size":2732,"mtime":1673528233163,"results":"30","hashOfConfig":"17"},{"size":3509,"mtime":1673528233162,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dfo1ur",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"/Users/user/Documents/GitHub/insta-clone1/frontend/src/index.js",[],[],"/Users/user/Documents/GitHub/insta-clone1/frontend/src/App.js",["88","89"],[],"import logo from \"./logo.svg\";\nimport React, { createContext, useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport SignUp from \"./components/SignUp\";\nimport SignIn from \"./components/SignIn\";\nimport Profie from \"./components/Profie\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Createpost from \"./components/Createpost\";\nimport { LoginContext } from \"./context/LoginContext\";\nimport Modal from \"./components/Modal\";\nimport UserProfie from \"./components/UserProfile\";\nimport MyFolliwngPost from \"./components/MyFollowingPost\";\n\nfunction App() {\n  const [userLogin, setUserLogin] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <LoginContext.Provider value={{ setUserLogin, setModalOpen }}>\n          <Navbar login={userLogin} />\n          <Routes>\n            <Route path=\"/\" element={<Home />}></Route>\n            <Route path=\"/signup\" element={<SignUp />}></Route>\n            <Route path=\"/signin\" element={<SignIn />}></Route>\n            <Route exact path=\"/profile\" element={<Profie />}></Route>\n            <Route path=\"/createPost\" element={<Createpost />}></Route>\n            <Route path=\"/profile/:userid\" element={<UserProfie />}></Route>\n            <Route path=\"/followingpost\" element={<MyFolliwngPost />}></Route>\n          </Routes>\n          <ToastContainer theme=\"dark\" />\n\n          {modalOpen && <Modal setModalOpen={setModalOpen}></Modal>}\n        </LoginContext.Provider>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/user/Documents/GitHub/insta-clone1/frontend/src/reportWebVitals.js",[],[],"/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/Navbar.js",[],[],"/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/Profie.js",["90","91"],[],"import React, { useEffect, useState } from \"react\";\nimport PostDetail from \"./PostDetail\";\nimport \"./Profile.css\";\nimport ProfilePic from \"./ProfilePic\";\n\nexport default function Profie() {\n  var picLink = \"https://cdn-icons-png.flaticon.com/128/3177/3177440.png\"\n  const [pic, setPic] = useState([]);\n  const [show, setShow] = useState(false)\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useState(\"\")\n  const [changePic, setChangePic] = useState(false)\n\n\n  const toggleDetails = (posts) => {\n    if (show) {\n      setShow(false);\n    } else {\n      setShow(true);\n      setPosts(posts);\n    }\n  };\n\n  const changeprofile = () => {\n    if (changePic) {\n      setChangePic(false)\n    } else {\n      setChangePic(true)\n    }\n  }\n\n\n  useEffect(() => {\n    fetch(`http://localhost:5000/user/${JSON.parse(localStorage.getItem(\"user\"))._id}`, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result)\n        setPic(result.post);\n        setUser(result.user)\n        console.log(pic);\n      });\n  }, []);\n\n  return (\n    <div className=\"profile\">\n      {/* Profile frame */}\n      <div className=\"profile-frame\">\n        {/* profile-pic */}\n        <div className=\"profile-pic\">\n          <img\n            onClick={changeprofile}\n            src={user.Photo ? user.Photo : picLink}\n            alt=\"\"\n          />\n        </div>\n        {/* profile-data */}\n        <div className=\"pofile-data\">\n          <h1>{JSON.parse(localStorage.getItem(\"user\")).name}</h1>\n          <div className=\"profile-info\" style={{ display: \"flex\" }}>\n            <p>{pic ? pic.length : \"0\"} posts</p>\n            <p>{user.followers ? user.followers.length : \"0\"} followers</p>\n            <p>{user.following ? user.following.length : \"0\"} following</p>\n          </div>\n        </div>\n      </div>\n      <hr\n        style={{\n          width: \"90%\",\n\n          opacity: \"0.8\",\n          margin: \"25px auto\",\n        }}\n      />\n      {/* Gallery */}\n      <div className=\"gallery\">\n        {pic.map((pics) => {\n          return <img key={pics._id} src={pics.photo}\n            onClick={() => {\n              toggleDetails(pics)\n            }}\n            className=\"item\"></img>;\n        })}\n      </div>\n      {show &&\n        <PostDetail item={posts} toggleDetails={toggleDetails} />\n      }\n      {\n        changePic &&\n        <ProfilePic changeprofile={changeprofile} />\n      }\n    </div>\n  );\n}\n","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/Createpost.js",["92"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./Createpost.css\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Createpost() {\n  const [body, setBody] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Toast functions\n  const notifyA = (msg) => toast.error(msg);\n  const notifyB = (msg) => toast.success(msg);\n\n  useEffect(() => {\n    // saving post to mongodb\n    if (url) {\n      fetch(\"http://localhost:5000/createPost\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        },\n        body: JSON.stringify({\n          body,\n          pic: url,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.error) {\n            notifyA(data.error);\n          } else {\n            notifyB(\"Successfully Posted\");\n            navigate(\"/\");\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [url]);\n\n  // posting image to cloudinary\n  const postDetails = () => {\n    console.log(body, image);\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"insta-clone\");\n    data.append(\"cloud_name\", \"cantacloud2\");\n    fetch(\"https://api.cloudinary.com/v1_1/cantacloud2/image/upload\", {\n      method: \"post\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((data) => setUrl(data.url))\n      .catch((err) => console.log(err));\n    console.log(url);\n  };\n\n  const loadfile = (event) => {\n    var output = document.getElementById(\"output\");\n    output.src = URL.createObjectURL(event.target.files[0]);\n    output.onload = function () {\n      URL.revokeObjectURL(output.src); // free memory\n    };\n  };\n  return (\n    <div className=\"createPost\">\n      {/* //header */}\n      <div className=\"post-header\">\n        <h4 style={{ margin: \"3px auto\" }}>Create New Post</h4>\n        <button\n          id=\"post-btn\"\n          onClick={() => {\n            postDetails();\n          }}\n        >\n          Share\n        </button>\n      </div>\n      {/* image preview */}\n      <div className=\"main-div\">\n        <img\n          id=\"output\"\n          src=\"https://cdn4.iconfinder.com/data/icons/ionicons/512/icon-image-512.png\"\n          alt=\"\"\n        />\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={(event) => {\n            loadfile(event);\n            setImage(event.target.files[0]);\n          }}\n        />\n      </div>\n      {/* details */}\n      <div className=\"details\">\n        <div className=\"card-header\">\n          <div className=\"card-pic\">\n            <img\n              src=\"https://images.unsplash.com/photo-1447433693259-c8549e937d62?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1106&q=80\"\n              alt=\"\"\n            />\n          </div>\n          <h5>apekking</h5>\n        </div>\n        <textarea\n          value={body}\n          onChange={(e) => {\n            setBody(e.target.value);\n          }}\n          type=\"text\"\n          placeholder=\"Write a caption....\"\n        ></textarea>\n      </div>\n    </div>\n  );\n}\n","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/Modal.js",[],[],"/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/UserProfile.js",["93","94","95"],[],"import React, { useEffect, useState } from \"react\";\nimport PostDetail from \"./PostDetail\";\nimport \"./Profile.css\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function UserProfie() {\n  var picLink = \"https://cdn-icons-png.flaticon.com/128/3177/3177440.png\";\n  const { userid } = useParams();\n  const [isFollow, setIsFollow] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n\n  // to follow user\n  const followUser = (userId) => {\n    fetch(\"http://localhost:5000/follow\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        followId: userId,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setIsFollow(true);\n      });\n  };\n\n  // to unfollow user\n  const unfollowUser = (userId) => {\n    fetch(\"http://localhost:5000/unfollow\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        followId: userId,\n      }),\n    })\n      .then((res) => {\n        res.json();\n      })\n      .then((data) => {\n        console.log(data);\n        setIsFollow(false);\n      });\n  };\n\n  useEffect(() => {\n    fetch(`http://localhost:5000/user/${userid}`, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        setUser(result.user);\n        setPosts(result.post);\n        if (\n          result.user.followers.includes(\n            JSON.parse(localStorage.getItem(\"user\"))._id\n          )\n        ) {\n          setIsFollow(true);\n        }\n      });\n  }, [isFollow]);\n\n  return (\n    <div className=\"profile\">\n      {/* Profile frame */}\n      <div className=\"profile-frame\">\n        {/* profile-pic */}\n        <div className=\"profile-pic\">\n          <img src={user.Photo ? user.Photo : picLink} alt=\"\" />\n        </div>\n        {/* profile-data */}\n        <div className=\"pofile-data\">\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <h1>{user.name}</h1>\n            <button\n              className=\"followBtn\"\n              onClick={() => {\n                if (isFollow) {\n                  unfollowUser(user._id);\n                } else {\n                  followUser(user._id);\n                }\n              }}\n            >\n              {isFollow ? \"Unfollow\" : \"Follow\"}\n            </button>\n          </div>\n          <div className=\"profile-info\" style={{ display: \"flex\" }}>\n            <p>{posts.length} posts</p>\n            <p>{user.followers ? user.followers.length : \"0\"} followers</p>\n            <p>{user.following ? user.following.length : \"0\"} following</p>\n          </div>\n        </div>\n      </div>\n      <hr\n        style={{\n          width: \"90%\",\n\n          opacity: \"0.8\",\n          margin: \"25px auto\",\n        }}\n      />\n      {/* Gallery */}\n      <div className=\"gallery\">\n        {posts.map((pics) => {\n          return (\n            <img\n              key={pics._id}\n              src={pics.photo}\n              // onClick={() => {\n              //     toggleDetails(pics)\n              // }}\n              className=\"item\"\n            ></img>\n          );\n        })}\n      </div>\n      {/* {show &&\n        <PostDetail item={posts} toggleDetails={toggleDetails} />\n      } */}\n    </div>\n  );\n}\n","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/MyFollowingPost.js",["96","97"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./Home.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n\nexport default function MyFolliwngPost() {\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [item, setItem] = useState([]);\n\n  // Toast functions\n  const notifyA = (msg) => toast.error(msg);\n  const notifyB = (msg) => toast.success(msg);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    if (!token) {\n      navigate(\"./signup\");\n    }\n\n    // Fetching all posts\n    fetch(\"http://localhost:5000/myfollwingpost\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        setData(result);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // to show and hide comments\n  const toggleComment = (posts) => {\n    if (show) {\n      setShow(false);\n    } else {\n      setShow(true);\n      setItem(posts);\n    }\n  };\n\n  const likePost = (id) => {\n    fetch(\"http://localhost:5000/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((posts) => {\n          if (posts._id === result._id) {\n            return result;\n          } else {\n            return posts;\n          }\n        });\n        setData(newData);\n        console.log(result);\n      });\n  };\n  const unlikePost = (id) => {\n    fetch(\"http://localhost:5000/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((posts) => {\n          if (posts._id === result._id) {\n            return result;\n          } else {\n            return posts;\n          }\n        });\n        setData(newData);\n        console.log(result);\n      });\n  };\n\n  // function to make comment\n  const makeComment = (text, id) => {\n    fetch(\"http://localhost:5000/comment\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        text: text,\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((posts) => {\n          if (posts._id === result._id) {\n            return result;\n          } else {\n            return posts;\n          }\n        });\n        setData(newData);\n        setComment(\"\");\n        notifyB(\"Comment posted\");\n        console.log(result);\n      });\n  };\n\n  return (\n    <div className=\"home\">\n      {/* card */}\n      {data.map((posts) => {\n        return (\n          <div className=\"card\">\n            {/* card header */}\n            <div className=\"card-header\">\n              <div className=\"card-pic\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29ufGVufDB8MnwwfHw%3D&auto=format&fit=crop&w=500&q=60\"\n                  alt=\"\"\n                />\n              </div>\n              <h5>\n                <Link to={`/profile/${posts.postedBy._id}`}>\n                  {posts.postedBy.name}\n                </Link>\n              </h5>\n            </div>\n            {/* card image */}\n            <div className=\"card-image\">\n              <img src={posts.photo} alt=\"\" />\n            </div>\n\n            {/* card content */}\n            <div className=\"card-content\">\n              {posts.likes.includes(\n                JSON.parse(localStorage.getItem(\"user\"))._id\n              ) ? (\n                <span\n                  className=\"material-symbols-outlined material-symbols-outlined-red\"\n                  onClick={() => {\n                    unlikePost(posts._id);\n                  }}\n                >\n                  favorite\n                </span>\n              ) : (\n                <span\n                  className=\"material-symbols-outlined\"\n                  onClick={() => {\n                    likePost(posts._id);\n                  }}\n                >\n                  favorite\n                </span>\n              )}\n\n              <p>{posts.likes.length} Likes</p>\n              <p>{posts.body} </p>\n              <p\n                style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\n                onClick={() => {\n                  toggleComment(posts);\n                }}\n              >\n                View all comments\n              </p>\n            </div>\n\n            {/* add Comment */}\n            <div className=\"add-comment\">\n              <span className=\"material-symbols-outlined\">mood</span>\n              <input\n                type=\"text\"\n                placeholder=\"Add a comment\"\n                value={comment}\n                onChange={(e) => {\n                  setComment(e.target.value);\n                }}\n              />\n              <button\n                className=\"comment\"\n                onClick={() => {\n                  makeComment(comment, posts._id);\n                }}\n              >\n                Post\n              </button>\n            </div>\n          </div>\n        );\n      })}\n\n      {/* show Comment */}\n      {show && (\n        <div className=\"showComment\">\n          <div className=\"container\">\n            <div className=\"postPic\">\n              <img src={item.photo} alt=\"\" />\n            </div>\n            <div className=\"details\">\n              {/* card header */}\n              <div\n                className=\"card-header\"\n                style={{ borderBottom: \"1px solid #00000029\" }}\n              >\n                <div className=\"card-pic\">\n                  <img\n                    src=\"https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29ufGVufDB8MnwwfHw%3D&auto=format&fit=crop&w=500&q=60\"\n                    alt=\"\"\n                  />\n                </div>\n                <h5>{item.postedBy.name}</h5>\n              </div>\n\n              {/* commentSection */}\n              <div\n                className=\"comment-section\"\n                style={{ borderBottom: \"1px solid #00000029\" }}\n              >\n                {item.comments.map((comment) => {\n                  return (\n                    <p className=\"comm\">\n                      <span\n                        className=\"commenter\"\n                        style={{ fontWeight: \"bolder\" }}\n                      >\n                        {comment.postedBy.name}{\" \"}\n                      </span>\n                      <span className=\"commentText\">{comment.comment}</span>\n                    </p>\n                  );\n                })}\n              </div>\n\n              {/* card content */}\n              <div className=\"card-content\">\n                <p>{item.likes.length} Likes</p>\n                <p>{item.body}</p>\n              </div>\n\n              {/* add Comment */}\n              <div className=\"add-comment\">\n                <span className=\"material-symbols-outlined\">mood</span>\n                <input\n                  type=\"text\"\n                  placeholder=\"Add a comment\"\n                  value={comment}\n                  onChange={(e) => {\n                    setComment(e.target.value);\n                  }}\n                />\n                <button\n                  className=\"comment\"\n                  onClick={() => {\n                    makeComment(comment, item._id);\n                    toggleComment();\n                  }}\n                >\n                  Post\n                </button>\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"close-comment\"\n            onClick={() => {\n              toggleComment();\n            }}\n          >\n            <span className=\"material-symbols-outlined material-symbols-outlined-comment\">\n              close\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/SignIn.js",["98","99"],[],"import React, { useState, useContext } from \"react\";\nimport \"./SignIn.css\";\nimport logo from \"../img/logo.png\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { LoginContext } from \"../context/LoginContext\";\n\nexport default function SignIn() {\n  const { setUserLogin } = useContext(LoginContext)\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  // Toast functions\n  const notifyA = (msg) => toast.error(msg)\n  const notifyB = (msg) => toast.success(msg)\n\n  const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  const postData = () => {\n    //checking email\n    if (!emailRegex.test(email)) {\n      notifyA(\"Invalid email\")\n      return\n    }\n    // Sending data to server\n    fetch(\"http://localhost:5000/signin\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n\n      })\n    }).then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          notifyA(data.error)\n        } else {\n          notifyB(\"Signed In Successfully\")\n          console.log(data)\n          localStorage.setItem(\"jwt\", data.token)\n          localStorage.setItem(\"user\", JSON.stringify(data.user))\n\n          setUserLogin(true)\n          navigate(\"/\")\n        }\n        console.log(data)\n      })\n  }\n\n  return (\n    <div className=\"signIn\">\n      <div>\n        <div className=\"loginForm\">\n          <img className=\"signUpLogo\" src={logo} alt=\"\" />\n          <div>\n            <input type=\"email\" name=\"email\" id=\"email\" value={email} placeholder=\"Email\" onChange={(e) => { setEmail(e.target.value) }} />\n          </div>\n          <div>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => { setPassword(e.target.value) }}\n            />\n          </div>\n          <input type=\"submit\" id=\"login-btn\" onClick={() => { postData() }} value=\"Sign In\" />\n        </div>\n        <div className=\"loginForm2\">\n          Don't have an account ?\n          <Link to=\"/signup\">\n            <span style={{ color: \"blue\", cursor: \"pointer\" }}>Sign Up</span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/Home.js",["100","101","102","103","104"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./Home.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  var picLink = \"https://cdn-icons-png.flaticon.com/128/3177/3177440.png\"\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [item, setItem] = useState([]);\n\n  // Toast functions\n  const notifyA = (msg) => toast.error(msg);\n  const notifyB = (msg) => toast.success(msg);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    if (!token) {\n      navigate(\"./signup\");\n    }\n\n    // Fetching all posts\n    fetch(\"http://localhost:5000/allposts\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        setData(result);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // to show and hide comments\n  const toggleComment = (posts) => {\n    if (show) {\n      setShow(false);\n    } else {\n      setShow(true);\n      setItem(posts);\n    }\n  };\n\n  const likePost = (id) => {\n    fetch(\"http://localhost:5000/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((posts) => {\n          if (posts._id == result._id) {\n            return result;\n          } else {\n            return posts;\n          }\n        });\n        setData(newData);\n        console.log(result);\n      });\n  };\n  const unlikePost = (id) => {\n    fetch(\"http://localhost:5000/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((posts) => {\n          if (posts._id == result._id) {\n            return result;\n          } else {\n            return posts;\n          }\n        });\n        setData(newData);\n        console.log(result);\n      });\n  };\n\n  // function to make comment\n  const makeComment = (text, id) => {\n    fetch(\"http://localhost:5000/comment\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        text: text,\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((posts) => {\n          if (posts._id == result._id) {\n            return result;\n          } else {\n            return posts;\n          }\n        });\n        setData(newData);\n        setComment(\"\");\n        notifyB(\"Comment posted\");\n        console.log(result);\n      });\n  };\n\n  return (\n    <div className=\"home\">\n      {/* card */}\n      {data.map((posts) => {\n        return (\n          <div className=\"card\">\n            {/* card header */}\n            <div className=\"card-header\">\n              <div className=\"card-pic\">\n                <img\n                  src={posts.postedBy.Photo ? posts.postedBy.Photo : picLink}\n                  alt=\"\"\n                />\n              </div>\n              <h5>\n                <Link to={`/profile/${posts.postedBy._id}`}>\n                  {posts.postedBy.name}\n                </Link>\n              </h5>\n            </div>\n            {/* card image */}\n            <div className=\"card-image\">\n              <img src={posts.photo} alt=\"\" />\n            </div>\n\n            {/* card content */}\n            <div className=\"card-content\">\n              {posts.likes.includes(\n                JSON.parse(localStorage.getItem(\"user\"))._id\n              ) ? (\n                <span\n                  className=\"material-symbols-outlined material-symbols-outlined-red\"\n                  onClick={() => {\n                    unlikePost(posts._id);\n                  }}\n                >\n                  favorite\n                </span>\n              ) : (\n                <span\n                  className=\"material-symbols-outlined\"\n                  onClick={() => {\n                    likePost(posts._id);\n                  }}\n                >\n                  favorite\n                </span>\n              )}\n\n              <p>{posts.likes.length} Likes</p>\n              <p>{posts.body} </p>\n              <p\n                style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\n                onClick={() => {\n                  toggleComment(posts);\n                }}\n              >\n                View all comments\n              </p>\n            </div>\n\n            {/* add Comment */}\n            <div className=\"add-comment\">\n              <span className=\"material-symbols-outlined\">mood</span>\n              <input\n                type=\"text\"\n                placeholder=\"Add a comment\"\n                value={comment}\n                onChange={(e) => {\n                  setComment(e.target.value);\n                }}\n              />\n              <button\n                className=\"comment\"\n                onClick={() => {\n                  makeComment(comment, posts._id);\n                }}\n              >\n                Post\n              </button>\n            </div>\n          </div>\n        );\n      })}\n\n      {/* show Comment */}\n      {show && (\n        <div className=\"showComment\">\n          <div className=\"container\">\n            <div className=\"postPic\">\n              <img src={item.photo} alt=\"\" />\n            </div>\n            <div className=\"details\">\n              {/* card header */}\n              <div\n                className=\"card-header\"\n                style={{ borderBottom: \"1px solid #00000029\" }}\n              >\n                <div className=\"card-pic\">\n                  <img\n                    src=\"https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29ufGVufDB8MnwwfHw%3D&auto=format&fit=crop&w=500&q=60\"\n                    alt=\"\"\n                  />\n                </div>\n                <h5>{item.postedBy.name}</h5>\n              </div>\n\n              {/* commentSection */}\n              <div\n                className=\"comment-section\"\n                style={{ borderBottom: \"1px solid #00000029\" }}\n              >\n                {item.comments.map((comment) => {\n                  return (\n                    <p className=\"comm\">\n                      <span\n                        className=\"commenter\"\n                        style={{ fontWeight: \"bolder\" }}\n                      >\n                        {comment.postedBy.name}{\" \"}\n                      </span>\n                      <span className=\"commentText\">{comment.comment}</span>\n                    </p>\n                  );\n                })}\n              </div>\n\n              {/* card content */}\n              <div className=\"card-content\">\n                <p>{item.likes.length} Likes</p>\n                <p>{item.body}</p>\n              </div>\n\n              {/* add Comment */}\n              <div className=\"add-comment\">\n                <span className=\"material-symbols-outlined\">mood</span>\n                <input\n                  type=\"text\"\n                  placeholder=\"Add a comment\"\n                  value={comment}\n                  onChange={(e) => {\n                    setComment(e.target.value);\n                  }}\n                />\n                <button\n                  className=\"comment\"\n                  onClick={() => {\n                    makeComment(comment, item._id);\n                    toggleComment();\n                  }}\n                >\n                  Post\n                </button>\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"close-comment\"\n            onClick={() => {\n              toggleComment();\n            }}\n          >\n            <span className=\"material-symbols-outlined material-symbols-outlined-comment\">\n              close\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/SignUp.js",["105","106","107","108","109","110"],[],"import React, { useEffect, useState } from \"react\";\nimport logo from \"../img/logo.png\";\nimport \"./SignUp.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { toast } from 'react-toastify';\n\n\nexport default function SignUp() {\n  const navigate = useNavigate()\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\")\n  const [userName, setUserName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  // Toast functions\n  const notifyA = (msg) => toast.error(msg)\n  const notifyB = (msg) => toast.success(msg)\n\n  const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  const passRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\n\n  const postData = () => {\n    //checking email\n    if (!emailRegex.test(email)) {\n      notifyA(\"Invalid email\")\n      return\n    } else if (!passRegex.test(password)) {\n      notifyA(\"Password must contain at least 8 characters, including at least 1 number and 1 includes both lower and uppercase letters and special characters for example #,?,!\")\n      return\n    }\n\n    // Sending data to server\n    fetch(\"http://localhost:5000/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        userName: userName,\n        email: email,\n        password: password\n\n      })\n    }).then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          notifyA(data.error)\n        } else {\n          notifyB(data.message)\n          navigate(\"/signin\")\n        }\n        console.log(data)\n      })\n  }\n\n  return (\n    <div className=\"signUp\">\n      <div className=\"form-container\">\n        <div className=\"form\">\n          <img className=\"signUpLogo\" src={logo} alt=\"\" />\n          <p className=\"loginPara\">\n            Sign up to see photos and videos <br /> from your friends\n          </p>\n          <div>\n            <input type=\"email\" name=\"email\" id=\"email\" value={email} placeholder=\"Email\" onChange={(e) => { setEmail(e.target.value) }} />\n          </div>\n          <div>\n            <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Full Name\" value={name} onChange={((e) => { setName(e.target.value) })} />\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"Username\"\n              value={userName}\n              onChange={(e) => { setUserName(e.target.value) }}\n            />\n          </div>\n          <div>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => { setPassword(e.target.value) }}\n            />\n          </div>\n          <p\n            className=\"loginPara\"\n            style={{ fontSize: \"12px\", margin: \"3px 0px\" }}\n          >\n            By signing up, you agree to out Terms, <br /> privacy policy and\n            cookies policy.\n          </p>\n          <input type=\"submit\" id=\"submit-btn\" value=\"Sign Up\" onClick={() => { postData() }} />\n        </div>\n        <div className=\"form2\">\n          Already have an account ?\n          <Link to=\"/signin\">\n            <span style={{ color: \"blue\", cursor: \"pointer\" }}>Sign In</span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/user/Documents/GitHub/insta-clone1/frontend/src/context/LoginContext.js",["111"],[],"import React, { createContext } from 'react';\nexport const LoginContext = createContext()","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/ProfilePic.js",["112","113"],[],"import React, { useState, useEffect, useRef } from \"react\";\n\nexport default function ProfilePic({ changeprofile }) {\n  const hiddenFileInput = useRef(null);\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  // posting image to cloudinary\n  const postDetails = () => {\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"insta-clone\");\n    data.append(\"cloud_name\", \"cantacloud2\");\n    fetch(\"https://api.cloudinary.com/v1_1/cantacloud2/image/upload\", {\n      method: \"post\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((data) => setUrl(data.url))\n      .catch((err) => console.log(err));\n    console.log(url);\n  };\n\n  const postPic = () => {\n    // saving post to mongodb\n    fetch(\"http://localhost:5000/uploadProfilePic\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        pic: url,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        changeprofile();\n        window.location.reload();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleClick = () => {\n    hiddenFileInput.current.click();\n  };\n\n  useEffect(() => {\n    if (image) {\n      postDetails();\n    }\n  }, [image]);\n  useEffect(() => {\n    if (url) {\n      postPic();\n    }\n  }, [url]);\n  return (\n    <div className=\"profilePic darkBg\">\n      <div className=\"changePic centered\">\n        <div>\n          <h2>Change Profile Photo</h2>\n        </div>\n        <div style={{ borderTop: \"1px solid #00000030\" }}>\n          <button\n            className=\"upload-btn\"\n            style={{ color: \"#1EA1F7\" }}\n            onClick={handleClick}\n          >\n            Upload Photo\n          </button>\n          <input\n            type=\"file\"\n            ref={hiddenFileInput}\n            accept=\"image/*\"\n            style={{ display: \"none\" }}\n            onChange={(e) => {\n              setImage(e.target.files[0]);\n            }}\n          />\n        </div>\n        <div style={{ borderTop: \"1px solid #00000030\" }}>\n          <button className=\"upload-btn\" style={{ color: \"#ED4956\" }}>\n            {\" \"}\n            Remove Current Photo\n          </button>\n        </div>\n        <div style={{ borderTop: \"1px solid #00000030\" }}>\n          <button\n            style={{\n              background: \"none\",\n              border: \"none\",\n              cursor: \"pointer\",\n              fontSize: \"15px\",\n            }}\n            onClick={changeprofile}\n          >\n            cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/user/Documents/GitHub/insta-clone1/frontend/src/components/PostDetail.js",["114"],[],"import React from \"react\";\nimport \"./PostDetail.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nexport default function PostDetail({ item, toggleDetails }) {\n  const navigate = useNavigate();\n\n  // Toast functions\n  const notifyA = (msg) => toast.error(msg);\n  const notifyB = (msg) => toast.success(msg);\n\n  const removePost = (postId) => {\n    if (window.confirm(\"Do you really want to delete this post ?\")) {\n      fetch(`http://localhost:5000/deletePost/${postId}`, {\n        method: \"delete\",\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        },\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          console.log(result);\n          toggleDetails();\n          navigate(\"/\");\n          notifyB(result.message);\n        });\n    }\n  };\n\n  return (\n    <div className=\"showComment\">\n      <div className=\"container\">\n        <div className=\"postPic\">\n          <img src={item.photo} alt=\"\" />\n        </div>\n        <div className=\"details\">\n          {/* card header */}\n          <div\n            className=\"card-header\"\n            style={{ borderBottom: \"1px solid #00000029\" }}\n          >\n            <div className=\"card-pic\">\n              <img\n                src=\"https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29ufGVufDB8MnwwfHw%3D&auto=format&fit=crop&w=500&q=60\"\n                alt=\"\"\n              />\n            </div>\n            <h5>{item.postedBy.name}</h5>\n            <div\n              className=\"deletePost\"\n              onClick={() => {\n                removePost(item._id);\n              }}\n            >\n              <span className=\"material-symbols-outlined\">delete</span>\n            </div>\n          </div>\n\n          {/* commentSection */}\n          <div\n            className=\"comment-section\"\n            style={{ borderBottom: \"1px solid #00000029\" }}\n          >\n            {item.comments.map((comment) => {\n              return (\n                <p className=\"comm\">\n                  <span className=\"commenter\" style={{ fontWeight: \"bolder\" }}>\n                    {comment.postedBy.name}{\" \"}\n                  </span>\n                  <span className=\"commentText\">{comment.comment}</span>\n                </p>\n              );\n            })}\n          </div>\n\n          {/* card content */}\n          <div className=\"card-content\">\n            <p>{item.likes.length} Likes</p>\n            <p>{item.body}</p>\n          </div>\n\n          {/* add Comment */}\n          <div className=\"add-comment\">\n            <span className=\"material-symbols-outlined\">mood</span>\n            <input\n              type=\"text\"\n              placeholder=\"Add a comment\"\n              //   value={comment}\n              //   onChange={(e) => {\n              //     setComment(e.target.value);\n              //   }}\n            />\n            <button\n              className=\"comment\"\n              //   onClick={() => {\n              //     makeComment(comment, item._id);\n              //     toggleComment();\n              //   }}\n            >\n              Post\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"close-comment\"\n        onClick={() => {\n          toggleDetails();\n        }}\n      >\n        <span className=\"material-symbols-outlined material-symbols-outlined-comment\">\n          close\n        </span>\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":12},{"ruleId":"115","severity":1,"message":"119","line":2,"column":17,"nodeType":"117","messageId":"118","endLine":2,"endColumn":30},{"ruleId":"120","severity":1,"message":"121","line":46,"column":6,"nodeType":"122","endLine":46,"endColumn":8,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":81,"column":18,"nodeType":"126","endLine":85,"endColumn":30},{"ruleId":"120","severity":1,"message":"127","line":41,"column":6,"nodeType":"122","endLine":41,"endColumn":11,"suggestions":"128"},{"ruleId":"115","severity":1,"message":"129","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":18},{"ruleId":"120","severity":1,"message":"130","line":72,"column":6,"nodeType":"122","endLine":72,"endColumn":16,"suggestions":"131"},{"ruleId":"124","severity":1,"message":"125","line":124,"column":13,"nodeType":"126","endLine":131,"endColumn":14},{"ruleId":"115","severity":1,"message":"132","line":15,"column":9,"nodeType":"117","messageId":"118","endLine":15,"endColumn":16},{"ruleId":"120","severity":1,"message":"133","line":36,"column":6,"nodeType":"122","endLine":36,"endColumn":8,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":18,"column":29,"nodeType":"137","messageId":"138","endLine":18,"endColumn":30,"suggestions":"139"},{"ruleId":"135","severity":1,"message":"136","line":18,"column":45,"nodeType":"137","messageId":"138","endLine":18,"endColumn":46,"suggestions":"140"},{"ruleId":"115","severity":1,"message":"132","line":16,"column":9,"nodeType":"117","messageId":"118","endLine":16,"endColumn":16},{"ruleId":"120","severity":1,"message":"133","line":37,"column":6,"nodeType":"122","endLine":37,"endColumn":8,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":63,"column":25,"nodeType":"144","messageId":"145","endLine":63,"endColumn":27},{"ruleId":"142","severity":1,"message":"143","line":87,"column":25,"nodeType":"144","messageId":"145","endLine":87,"endColumn":27},{"ruleId":"142","severity":1,"message":"143","line":114,"column":25,"nodeType":"144","messageId":"145","endLine":114,"endColumn":27},{"ruleId":"115","severity":1,"message":"146","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"135","severity":1,"message":"136","line":20,"column":29,"nodeType":"137","messageId":"138","endLine":20,"endColumn":30,"suggestions":"147"},{"ruleId":"135","severity":1,"message":"136","line":20,"column":45,"nodeType":"137","messageId":"138","endLine":20,"endColumn":46,"suggestions":"148"},{"ruleId":"135","severity":1,"message":"149","line":21,"column":65,"nodeType":"137","messageId":"138","endLine":21,"endColumn":66,"suggestions":"150"},{"ruleId":"135","severity":1,"message":"151","line":21,"column":68,"nodeType":"137","messageId":"138","endLine":21,"endColumn":69,"suggestions":"152"},{"ruleId":"135","severity":1,"message":"153","line":21,"column":71,"nodeType":"137","messageId":"138","endLine":21,"endColumn":72,"suggestions":"154"},{"ruleId":"115","severity":1,"message":"155","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"120","severity":1,"message":"156","line":53,"column":6,"nodeType":"122","endLine":53,"endColumn":13,"suggestions":"157"},{"ruleId":"120","severity":1,"message":"158","line":58,"column":6,"nodeType":"122","endLine":58,"endColumn":11,"suggestions":"159"},{"ruleId":"115","severity":1,"message":"132","line":10,"column":9,"nodeType":"117","messageId":"118","endLine":10,"endColumn":16},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'createContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pic'. Either include it or remove the dependency array.","ArrayExpression",["160"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'body' and 'navigate'. Either include them or remove the dependency array.",["161"],"'PostDetail' is defined but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["162"],"'notifyA' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["163"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["164","165"],["166","167"],["168"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.",["169","170"],["171","172"],"Unnecessary escape character: \\$.",["173","174"],"Unnecessary escape character: \\^.",["175","176"],"Unnecessary escape character: \\*.",["177","178"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'postDetails'. Either include it or remove the dependency array.",["179"],"React Hook useEffect has a missing dependency: 'postPic'. Either include it or remove the dependency array.",["180"],{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"messageId":"189","fix":"190","desc":"191"},{"messageId":"192","fix":"193","desc":"194"},{"messageId":"189","fix":"195","desc":"191"},{"messageId":"192","fix":"196","desc":"194"},{"desc":"187","fix":"197"},{"messageId":"189","fix":"198","desc":"191"},{"messageId":"192","fix":"199","desc":"194"},{"messageId":"189","fix":"200","desc":"191"},{"messageId":"192","fix":"201","desc":"194"},{"messageId":"189","fix":"202","desc":"191"},{"messageId":"192","fix":"203","desc":"194"},{"messageId":"189","fix":"204","desc":"191"},{"messageId":"192","fix":"205","desc":"194"},{"messageId":"189","fix":"206","desc":"191"},{"messageId":"192","fix":"207","desc":"194"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [pic]",{"range":"212","text":"213"},"Update the dependencies array to be: [body, navigate, url]",{"range":"214","text":"215"},"Update the dependencies array to be: [isFollow, userid]",{"range":"216","text":"217"},"Update the dependencies array to be: [navigate]",{"range":"218","text":"219"},"removeEscape",{"range":"220","text":"221"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"222","text":"223"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"224","text":"221"},{"range":"225","text":"223"},{"range":"226","text":"219"},{"range":"227","text":"221"},{"range":"228","text":"223"},{"range":"229","text":"221"},{"range":"230","text":"223"},{"range":"231","text":"221"},{"range":"232","text":"223"},{"range":"233","text":"221"},{"range":"234","text":"223"},{"range":"235","text":"221"},{"range":"236","text":"223"},"Update the dependencies array to be: [image, postDetails]",{"range":"237","text":"238"},"Update the dependencies array to be: [postPic, url]",{"range":"239","text":"240"},[1145,1147],"[pic]",[1134,1139],"[body, navigate, url]",[1884,1894],"[isFollow, userid]",[1027,1029],"[navigate]",[613,614],"",[613,613],"\\",[629,630],[629,629],[1085,1087],[592,593],[592,592],[608,609],[608,608],[698,699],[698,698],[701,702],[701,701],[704,705],[704,704],[1392,1399],"[image, postDetails]",[1465,1470],"[postPic, url]"]